{"id":"venom","symbol":"venom","name":"Venom","asset_platform_id":null,"platforms":{"":null},"detail_platforms":{"":{"decimal_place":null,"contract_address":null}},"block_time_in_minutes":0,"hashing_algorithm":null,"categories":[],"public_notice":null,"additional_notices":["No active trades are found for this coin. Please submit a ticket at %{link} if you think this is an error."],"localization":{"en":"Venom","de":"Venom","es":"Venom","fr":"Venom","it":"Venom","pl":"Venom","ro":"Venom","hu":"Venom","nl":"Venom","pt":"Venom","sv":"Venom","vi":"Venom","tr":"Venom","ru":"Venom","ja":"Venom","zh":"Venom","zh-tw":"Venom","ko":"Venom","ar":"Venom","th":"Venom","id":"Venom","cs":"Venom","da":"Venom","el":"Venom","hi":"Venom","no":"Venom","sk":"Venom","uk":"Venom","he":"Venom","fi":"Venom","bg":"Venom","hr":"Venom","lt":"Venom","sl":"Venom"},"description":{"en":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","de":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","es":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","fr":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","it":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","pl":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","ro":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","hu":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","nl":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","pt":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","sv":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","vi":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","tr":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","ru":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","ja":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","zh":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","zh-tw":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","ko":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","ar":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","th":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","id":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","cs":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","da":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","el":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","hi":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","no":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","sk":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","uk":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","he":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","fi":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","bg":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","hr":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","lt":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed.","sl":"What Is Venom?\r\nVenom is a multi-blockchain network being a basis for scalable Web3 applications in the DeFi and Global Payments markets. Blockchain provides the best transactional scalability solution and economic scalability.\r\n\r\nVenom architecture is designed as a heterogeneous multi-blockchain platform with dynamic sharding. Venom masterchain is layer-0 blockchain, which is responsible for coordinating all the protocol entities such as workchains and shardchains. The masterchain state stores the network configuration, information about a set of validators, their stakes, and election rounds. Venom supports up to 2^32 workchains.\r\n\r\nVenom provides a virtual machine that executes smart contract code on the Venom blockchain. It is the Turing complete virtual machine. Smart contracts in Venom give new, more flexible, and controlled flow over the execution of application logic. In Venom there are election mechanics for validator slashing, using a group of different task validators from the global validators set producing blocks for Shardchain, and guaranteeing decent decentralization.\r\n\r\nVenom is designed as a distributed computing system with a scalability opportunity through infinity sharding. This means that Venom can share tasks between groups of validator nodes called \"a validator task group\" depending on the load, and one part of the tasks doesn't need to wait for other tasks to be completed.\r\n\r\nVenom by design has an asynchronous model of communication between smart contracts. This is because of the need to maintain calls between contracts located in different shards, processed by different validator task groups. In this way each smart contract has the only way to affect the state of some other account by sending a message, the result of its execution of it will be a transaction. The order of execution of the outbound messages queue is guaranteed."},"links":{"homepage":["https://venom.foundation","",""],"blockchain_site":["","","","","","","","","",""],"official_forum_url":["","",""],"chat_url":["https://discord.gg/E5JdCbFFW7","https://medium.com/@venom.foundation",null],"announcement_url":[null,null],"twitter_screen_name":"VenomFoundation","facebook_username":null,"bitcointalk_thread_identifier":null,"telegram_channel_identifier":"VenomFoundationOfficial","subreddit_url":null,"repos_url":{"github":[],"bitbucket":[]}},"image":{"thumb":"https://assets.coingecko.com/coins/images/28660/thumb/Venom_Icon.png?1672976253","small":"https://assets.coingecko.com/coins/images/28660/small/Venom_Icon.png?1672976253","large":"https://assets.coingecko.com/coins/images/28660/large/Venom_Icon.png?1672976253"},"country_origin":null,"genesis_date":null,"sentiment_votes_up_percentage":75,"sentiment_votes_down_percentage":25,"watchlist_portfolio_users":2065,"market_cap_rank":null,"coingecko_rank":null,"coingecko_score":0,"developer_score":0,"community_score":0,"liquidity_score":0,"public_interest_score":0,"public_interest_stats":{"alexa_rank":null,"bing_matches":null},"status_updates":[],"last_updated":null}